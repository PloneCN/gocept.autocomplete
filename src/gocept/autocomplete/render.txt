=========
Rendering
=========

Superclass
----------

The AutocompleteWidget is an enhanced TextWidget, so the tests for the
TextWidget still need to work:

>>> import gocept.autocomplete.interfaces
>>> from gocept.autocomplete.widget import AutocompleteWidget

The widget can render a input field for a text line:

>>> from zope.interface.verify import verifyClass
>>> import z3c.form.interfaces

It is a widget:

>>> verifyClass(z3c.form.interfaces.IWidget, AutocompleteWidget)
True

The widget can render a input field only by adapting a request:

>>> import z3c.form.testing
>>> request = z3c.form.testing.TestRequest()
>>> widget = AutocompleteWidget(request)

Such a field provides IWidget:

>>> z3c.form.interfaces.IWidget.providedBy(widget)
True

We also need to register the template for both the TextWidget and the
AutocompleteWidget:

>>> import os.path
>>> import zope.interface
>>> from zope.pagetemplate.interfaces import IPageTemplate
>>> import z3c.form.browser
>>> import z3c.form.widget
>>> template = os.path.join(os.path.dirname(z3c.form.browser.__file__),
...     'text_input.pt')
>>> factory = z3c.form.widget.WidgetTemplateFactory(template)
>>> zope.component.provideAdapter(factory,
...     (zope.interface.Interface, z3c.form.interfaces.IFormLayer, None, None,
...     z3c.form.interfaces.ITextWidget),
...     IPageTemplate, name='input')

If we render the widget we get the HTML:

>>> print widget.render()
<input class="text-widget" value="" type="text" />

Adding some more attributes to the widget will make it display more:

>>> widget.id = 'id'
>>> widget.name = 'name'
>>> widget.value = u'value'
>>> widget.style = u'color: blue'

>>> print widget.render()
<input id="id" name="name" class="text-widget"
       style="color: blue" value="value" type="text" />

Display mode:

>>> template = os.path.join(os.path.dirname(z3c.form.browser.__file__),
...     'text_display.pt')
>>> factory = z3c.form.widget.WidgetTemplateFactory(template)
>>> zope.component.provideAdapter(factory,
...     (zope.interface.Interface, z3c.form.interfaces.IFormLayer, None, None,
...     z3c.form.interfaces.ITextWidget),
...     IPageTemplate, name='display')

>>> widget.mode = z3c.form.interfaces.DISPLAY_MODE
>>> print widget.render()
<span id="id" class="text-widget" style="color: blue">value</span>
